// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`definition converter convert to "number" schema definition "type and empty enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and empty enum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and format" 1`] = `
Object {
  "default": undefined,
  "description": "type and format",
  "enum": undefined,
  "format": "timestamp",
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and mixed enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and mixed enum",
  "enum": Array [
    1,
    2,
    3,
  ],
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and numeric default" 1`] = `
Object {
  "default": 1,
  "description": "type and numeric default",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and numeric enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric enum",
  "enum": Array [
    1,
    2,
    3,
  ],
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and numeric maximum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric maximum",
  "enum": undefined,
  "format": undefined,
  "maximum": 1,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and numeric minimum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric minimum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": 1,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and string default" 1`] = `
Object {
  "default": 1,
  "description": "type and string default",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and string maximum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string maximum",
  "enum": undefined,
  "format": undefined,
  "maximum": "1",
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type and string minimum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string minimum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": "1",
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type integer" 1`] = `
Object {
  "default": undefined,
  "description": "type integer",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "number" schema definition "type number" 1`] = `
Object {
  "default": undefined,
  "description": "type number",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`definition converter convert to "string" schema definition "additional fields used" 1`] = `
Object {
  "default": undefined,
  "description": "additional fields used",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "all fields set" 1`] = `
Object {
  "default": undefined,
  "description": "all fields set",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "just type and description" 1`] = `
Object {
  "default": undefined,
  "description": "just type and description",
  "enum": undefined,
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type and defined empty enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and defined empty enum",
  "enum": undefined,
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type and format" 1`] = `
Object {
  "default": undefined,
  "description": "type and format",
  "enum": undefined,
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type and mixed enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and mixed enum",
  "enum": Array [
    "true",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type and string enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string enum",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type with default value" 1`] = `
Object {
  "default": "default value",
  "description": "type with default value",
  "enum": undefined,
  "type": "string",
}
`;

exports[`definition converter convert to "string" schema definition "type, format and default value" 1`] = `
Object {
  "default": "some default value",
  "description": "type, format and default value",
  "enum": undefined,
  "type": "string",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and boolean enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and boolean enum",
  "enum": Array [
    false,
    true,
  ],
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and empty enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and empty enum",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and format" 1`] = `
Object {
  "default": undefined,
  "description": "type and format",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and mixed enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and mixed enum",
  "enum": Array [
    true,
    false,
    false,
    false,
  ],
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and negative default" 1`] = `
Object {
  "default": false,
  "description": "type and negative default",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and numeric negative falsy default" 1`] = `
Object {
  "default": false,
  "description": "type and numeric negative falsy default",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and numeric truthy default" 1`] = `
Object {
  "default": true,
  "description": "type and numeric truthy default",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and positive default" 1`] = `
Object {
  "default": true,
  "description": "type and positive default",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type and string default" 1`] = `
Object {
  "default": true,
  "description": "type and string default",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "boolean" converter converts scenario "type number" 1`] = `
Object {
  "default": undefined,
  "description": "type number",
  "enum": undefined,
  "type": "boolean",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and empty enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and empty enum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and format" 1`] = `
Object {
  "default": undefined,
  "description": "type and format",
  "enum": undefined,
  "format": "timestamp",
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and mixed enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and mixed enum",
  "enum": Array [
    1,
    2,
    3,
  ],
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and numeric default" 1`] = `
Object {
  "default": 1,
  "description": "type and numeric default",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and numeric enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric enum",
  "enum": Array [
    1,
    2,
    3,
  ],
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and numeric maximum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric maximum",
  "enum": undefined,
  "format": undefined,
  "maximum": 1,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and numeric minimum" 1`] = `
Object {
  "default": undefined,
  "description": "type and numeric minimum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": 1,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and string default" 1`] = `
Object {
  "default": 1,
  "description": "type and string default",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and string maximum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string maximum",
  "enum": undefined,
  "format": undefined,
  "maximum": "1",
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type and string minimum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string minimum",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": "1",
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type integer" 1`] = `
Object {
  "default": undefined,
  "description": "type integer",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "number" converter converts scenario "type number" 1`] = `
Object {
  "default": undefined,
  "description": "type number",
  "enum": undefined,
  "format": undefined,
  "maximum": undefined,
  "minimum": undefined,
  "type": "number",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "additional fields used" 1`] = `
Object {
  "default": undefined,
  "description": "additional fields used",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "all fields set" 1`] = `
Object {
  "default": undefined,
  "description": "all fields set",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "just type and description" 1`] = `
Object {
  "default": undefined,
  "description": "just type and description",
  "enum": undefined,
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type and defined empty enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and defined empty enum",
  "enum": undefined,
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type and format" 1`] = `
Object {
  "default": undefined,
  "description": "type and format",
  "enum": undefined,
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type and mixed enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and mixed enum",
  "enum": Array [
    "true",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type and string enum" 1`] = `
Object {
  "default": undefined,
  "description": "type and string enum",
  "enum": Array [
    "1",
    "2",
    "3",
  ],
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type with default value" 1`] = `
Object {
  "default": "default value",
  "description": "type with default value",
  "enum": undefined,
  "type": "string",
}
`;

exports[`swagger definition converter for type "string" converter converts scenario "type, format and default value" 1`] = `
Object {
  "default": "some default value",
  "description": "type, format and default value",
  "enum": undefined,
  "type": "string",
}
`;
